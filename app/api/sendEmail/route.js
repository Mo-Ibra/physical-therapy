import nodemailer from "nodemailer";

export async function POST(request) {
  try {
    var { name, phone, data, email, message } = await request.json();

    if (!email) {
      email = "Ø§Ù„Ù…Ø±ÙŠØ¶ Ø¨Ø¯ÙˆÙ† Ø¨Ø±ÙŠØ¯ Ø§Ù„ÙƒØªØ±ÙˆÙ†ÙŠ";
    }

    if (!message) {
      message = "Ø§Ù„Ù…Ø±ÙŠØ¶ Ù„Ù… ÙŠØªØ±Ùƒ Ø±Ø³Ø§Ù„Ø©";
    }

    if (!name, phone, data) {
      return Response.json(
        { success: false, error: "ÙŠØ¬Ø¨ Ø§Ù”Ù† ØªÙ‚ÙˆÙ… Ø¨ØªØ¹Ø¨ÙŠÙ”Ø© Ø¬Ù…ÙŠØ¹ Ø§Ù„Ø­Ù‚ÙˆÙ„ ØŒ Ø§Ù„Ø§Ø³Ù… ÙˆØ§Ù„Ù…ÙˆØ¨ÙŠÙ„ ÙˆØ§Ù„ØªØ§Ø±ÙŠØ®" },
        { status: 400 }
      );
    }

    const transporter = nodemailer.createTransport({
      service: "Gmail",
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_PASS,
      },
    });

    await transporter.sendMail({
      from: `"${name}" <${email}>`,
      to: process.env.GMAIL_USER,
      subject: "ðŸ“© Ù„Ø¯ÙŠÙƒ Ø­Ø¬Ø² Ù…ÙˆØ¹Ø¯ Ø¬Ø¯ÙŠØ¯",
      text: `Ø§Ù„Ø§Ø³Ù…: ${name}\nØ§Ù„Ø§ÙŠÙ…ÙŠÙ„: ${email}\nØ§Ù„Ø±Ø³Ø§Ù„Ø©: ${message}\nØ§Ù„Ù…ÙˆØ¨ÙŠÙ„: ${phone}\nØ§Ù„ØªØ§Ø±ÙŠØ®: ${data}`,
      html: `
        <div style="font-family: Arial, sans-serif; padding: 20px; background-color: #f9f9f9; border-radius: 8px; border: 1px solid #ddd;">
          <h2 style="color: #333;">ðŸ“© New Contact Form Submission</h2>
          <p><strong>Ø§Ù„Ø§Ø³Ù…:</strong> ${name}</p>
          <p><strong>Ø§Ù„Ù…ÙˆØ¨ÙŠÙ„:</strong> ${phone}</p>
          <p><strong>Ù…ÙˆØ¹Ø¯ Ø§Ù„Ø­Ø¬Ø²:</strong> ${data}</p>
          <p><strong>Ø§Ù„Ø§ÙŠÙ…ÙŠÙ„:</strong> <a href="mailto:${email}" style="color: #007bff;">${email}</a></p>
          <p><strong>Ø§Ù„Ø±Ø³Ø§Ù„Ø©:</strong></p>
          <blockquote style="background: #eee; padding: 10px; border-left: 5px solid #007bff; margin: 10px 0;">
            ${message}
          </blockquote>
          <hr style="border: none; border-top: 1px solid #ddd;" />
          <p style="font-size: 12px; color: #555;">ØªÙ… Ø§Ø±Ø³Ø§Ù„ ØªÙ„Ùƒ Ø§Ù„Ø±Ø³Ø§Ù„Ø© Ù…Ù† Ø§Ù„Ù…ÙˆÙ‚Ø¹ Ø§Ù„Ø®Ø§Øµ Ø¨Ùƒ.</p>
        </div>
      `,
    });

    return Response.json({ success: true }, { status: 200 });
  } catch (error) {
    console.error("Error sending email:", error);
    return Response.json(
      { success: false, error: "Failed to send email" },
      { status: 500 }
    );
  }
}